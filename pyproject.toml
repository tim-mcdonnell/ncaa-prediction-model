[project]
name = "ncaa-prediction-model"
version = "0.1.0"
description = "NCAA Basketball Prediction Model"
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = "MIT"
dependencies = [
    # Core data & modeling
    "pydantic>=2.10.6",
    "polars[pyarrow]>=1.25.2",
    "duckdb>=1.2.1",
    "scikit-learn>=1.6.1",
    
    # Utilities
    "click>=8.1.8",
    "structlog>=25.2.0",
    "rich>=13.9.4",
    "httpx>=0.28.1",
    "tenacity>=9.0.0",
    
    # Visualization
    "dash>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.11.2",
    "pytest>=8.3.5",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
]

docs = [
    "mkdocs-material>=9.6.9",
]

deep-learning = [
    "torch>=2.6.0",
    "lightning>=2.5.1",
]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "S",   # flake8-bandit (security)
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "RUF", # Ruff-specific rules
]

# Keep some docstring rules but be less strict
extend-select = ["D417", "D206", "D300"]

ignore = [
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D203",   # 1 blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "D", "ARG", "PLR"]  # Be more relaxed with test files
"**/models/*.py" = ["ARG001"]  # Allow unused arguments in models

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# Consider removing MyPy entirely if it's causing significant delays

[tool.ruff.lint.pydocstyle]
convention = "google"
