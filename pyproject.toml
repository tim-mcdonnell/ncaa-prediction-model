[project]
name = "ncaa-prediction-model"
version = "0.1.0"
description = "NCAA Basketball Prediction Model"
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = "MIT"
dependencies = [
    "pydantic>=2.6.1",
    "polars[pyarrow]>=1.25.2",
    "duckdb>=1.2.1",
    "scikit-learn>=1.3.2",
    "click>=8.1.3",
    "structlog>=23.1.0",
    "rich>=13.3.5",
    "httpx>=0.28.1",
    "tenacity>=9.0.0",
    "plotly>=5.18.0",
    "dash>=2.14.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "lightning>=2.0.0",
    "types-pyyaml>=6.0.12.20241230",
]


[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.25.3",
    "ruff>=0.11.0",
    "mypy>=1.8.0",
    "mkdocs-material>=9.5.4",
    "pre-commit>=4.2.0",
]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    # Current rules
    "E", "F", "B", "I", "N", "W", "UP", "ANN", "S", "A", "C4",
    "T20", "ARG", "ERA", "PD", "PL", "NPY", "RUF",
    # Additional rules
    "D",    # pydocstyle for docstrings
    "DTZ",  # datetime timezone best practices
    "PT",   # pytest best practices
    "COM",  # trailing commas
    "EM",   # exception message formatting
    "TRY",  # exception handling anti-patterns
    "SIM",  # Code simplification
    "PIE",  # Recommended Python expressions
    "TCH",  # Type checking
    "INP",  # Detects implicit namespace packages
]

ignore = [
    "COM812", # Missing trailing comma in multiline container literal (handled by formatter)
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D203",   # 1 blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
]

[tool.ruff.lint.per-file-ignores]
"notebooks/*.py" = ["PD", "T20"]  # More flexible pandas usage in notebooks
"notebooks/*.ipynb" = ["PD", "T20", "D"]
"tests/**/*.py" = ["S101", "ANN"]  # Allow assert in tests, flexible annotations

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false  # Allow untyped decorators
no_implicit_optional = true
disable_error_code = ["misc", "no-untyped-def"]  # Ignore errors for untyped decorators and function defs

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
